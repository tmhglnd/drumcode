#N canvas 827 239 527 327 12;
#X obj 59 58 inlet;
#X obj 125 171 metro 10;
#X obj 125 109 loadbang;
#X msg 128 140 1;
#X obj 59 242 t b f;
#X obj 125 299 -;
#X floatatom 296 299 5 0 0 0 - - - 12;
#X obj 125 339 expr if($f1 > 0 \, $f1/$f2 \, $f1/$f3);
#X obj 59 339 f;
#X obj 59 383 +;
#X obj 59 598 outlet;
#X text 168 478 y[n] = y[n-1] + (x[n] - y[n-1]) / slide;
#X text 168 501 slide = if (x[n] - y[n-1] > 0) slideup else slidedown;
#X msg 127 201 0;
#X text 100 56 1 (number) input a number to create a slide for;
#X obj 296 109 inlet;
#X obj 296 257 scale 0 1 5 500 2;
#X obj 351 299 loadmess 130;
#X obj 210 257 loadbang;
#X text 337 107 2 (number) slide amount 0-1;
#X obj 125 419 expr if($f1 < 0.0001 \, 0 \, $f1);
#X text 536 87 Create a slide \, that slides back to a value over time \, but immediately shoots up when an incoming value is received greater than that ground value., f 44;
#X text 536 56 dc.slide;
#X text 108 597 (number) slide continuous output;
#X text 168 457 the formula used:;
#X text 168 523 from: https://cycling74.com/forums/slide-object-to-use-for-attack-and-release-within-compressor#reply-58ed20536908cf22c838f044;
#X obj 337 170 args -;
#X obj 337 201 route -interval;
#X obj 337 140 loadbang;
#X msg 213 299 1;
#X connect 0 0 4 0;
#X connect 1 0 13 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 8 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 7 2;
#X connect 7 0 9 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 0 20 0;
#X connect 13 0 4 0;
#X connect 15 0 16 0;
#X connect 16 0 6 0;
#X connect 17 0 6 0;
#X connect 18 0 29 0;
#X connect 20 0 8 1 48.................K.....9++++B....f++++O4+++ux++++S9+++q7+++um++++;
#X connect 20 0 5 1 48.................S....j9++++D....o++++K1++++B....h8+++u....fc++++;
#X connect 26 0 27 0;
#X connect 27 0 1 1;
#X connect 27 1 16 0;
#X connect 28 0 26 0;
#X connect 29 0 7 1;
