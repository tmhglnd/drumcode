#N canvas 827 239 527 327 12;
#X declare -path else;
#X declare -path cyclone;
#X obj 600 59 cnv 15 283 29 empty empty dc.learn 20 13 0 20 #00deb1 #ffffff 0;
#X obj 59 354 markov 1 1;
#A saved memory 62 ||| \; 63 ||| \; 65 ||| \; 67 ||| \; 72 ||| \; 60 ||| \; 69 ||| \; 70 ||| \;;
#A saved order 2;
#A saved markov 1 1 0 \; 1 0 1 5 \; 0 1 2 \; 1 2 3 \; 2 3 2 4 \; 3 2 3 \; 3 4 1 \; 4 1 0 \; 0 5 1 \; 5 1 5 1 \; 1 5 6 \; 5 6 7 \; 6 7 4 \; 7 4 5 \; 4 5 5 \; 5 5 1 \;;
#A saved indices 0 1 2 3 2 3 4 1 0 5 1 5 6 7 4 5 5 1 1;
#X obj 233 220 iter;
#X msg 119 220 create;
#X msg 178 220 clear;
#X obj 119 156 t b l b;
#X obj 221 156 t b l;
#X obj 328 206 loadbang;
#X obj 435 370 declare -path else;
#X obj 435 400 declare -path cyclone;
#X text 285 324 the default order of the markovchain is 2, f 19;
#X obj 59 400 outlet (number) output value from learned pattern;
#X obj 328 243 args -;
#X obj 328 279 route -order;
#X text 600 96 This object learns a pattern from incoming lists and when send a trigger will play back a pattern that is similar to the learned pattern \, based on the probabilities of what is most likely to happen next. The learning is done with a Markov Chain \, a probabilistic sequence prediction model. The default order of the chain is 2 \, but can be adjusted with -order attribute. A list send to the second inlet with clear the model and train on that list. A list send to the third inlet with add the list to the previous training., f 41;
#X msg 59 479 60 60 67 67 69 69 67 65 65 64 64 62 62 60;
#X msg 59 559 67 69 67 65 64 60 67 69 67 65 64 60 60 55 60 60 55 60;
#X msg 59 518 60 62 64 60 60 62 64 60 64 65 67 64 65 67;
#X text 354 478 example melodies;
#X obj 59 59 inlet (trigger) predict the next value and output;
#X obj 119 89 inlet (list) clear and learn from incoming list pattern;
#X obj 221 121 inlet (number/list) add to the learned pattern \, without clearing;
#X obj 233 279 loadmess 2;
#X obj 59 89 t b;
#X connect 1 0 11 0;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 3 0;
#X connect 5 1 2 0;
#X connect 5 2 4 0;
#X connect 6 0 3 0;
#X connect 6 1 2 0;
#X connect 7 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 1 2;
#X connect 13 1 5 0;
#X connect 19 0 23 0;
#X connect 20 0 5 0;
#X connect 21 0 6 0;
#X connect 22 0 1 2;
#X connect 23 0 1 0;
