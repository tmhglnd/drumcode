#N canvas 827 239 527 327 12;
#X declare -path ~/path/to/sounds;
#X declare -path drumcode/pd;
#X declare -path FluidCorpusManipulation;
#X obj 39 96 cnv 15 421 67 empty empty written\ by\ Timo\ Hoogland\,\ 2024\,\ www.timohoogland.com 7 12 0 12 #efefef #000000 0;
#X obj 39 2081 dc.timer;
#X obj 39 39 cnv 15 421 41 empty empty ./drum.code 20 20 0 24 #00cb9e #ffffff 0;
#X text 39 173 A library of tools for hybrid drums (or other instruments) \, with onset detection \, timbre analysis \, basic algorithmic composition techniques \, midi and osc trigger outputs \, and more;
#X obj 39 2045 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 698 2357 dc.inrange 50 100, f 16;
#X obj 701 2322 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 701 2398 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X text 39 133 - Funded by Creative Industries Fund NL;
#X text 39 113 - License: GNU GPL-3.0;
#X obj 436 2045 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X floatatom 436 2121 5 0 0 0 - - - 12;
#X obj 436 2081 dc.count 250;
#X floatatom 39 2121 5 0 0 0 - - - 12;
#X obj 909 2396 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 909 2322 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 909 2422 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 906 2358 dc.gate 50;
#X text 436 1998 count triggers within a timeframe, f 16;
#X text 910 2275 output left if value passes threshold \, else output right, f 25;
#X text 698 2274 only output if value is within the specified range, f 23;
#X floatatom 39 2260 5 0 0 0 - - - 12;
#X obj 39 2222 dc.average 10;
#X text 57 2178 get the average over 10 values, f 14;
#X text 234 2178 get the speed value from 0-1, f 14;
#X obj 220 2258 hsl 128 17 0.01 1 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X text 39 1997 time from triggers, f 10;
#X obj 217 2222 dc.speed;
#X obj 220 2458 hsl 128 17 0 1 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #000000 #000000 0 1;
#X text 234 2376 slide back from the incoming value slowly to 0, f 23;
#X obj 217 2424 dc.slide;
#X msg 436 2343 /trigger/speed \$1;
#X text 455 2369 send Open Sound Control (OSC) messages over the network or locally, f 24;
#X text 436 2305 format an OSC message like so:;
#X text 925 2447 use this object to send osc "wireless" to the dc.osc.send object, f 24;
#X obj 906 2499 dc.osc.message /slider/low;
#X obj 436 2424 dc.osc.send localhost 4880;
#X obj 200 599 dc.trigger~;
#X obj 39 2387 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #000000 #000000;
#X obj 39 2458 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #000000 #000000;
#X obj 39 2424 dc.wait 2000;
#X obj 200 377 adc~ 1;
#X obj 200 406 meter~;
#X obj 200 660 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 272 547 hsl 128 17 0 1 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 2572 1;
#X text 269 462 <- [meter~] - useful to see the level of the incoming sound;
#X text 39 2340 reduce speed limit of incoming values, f 17;
#X text 269 521 adjust trigger the sensitivity (0 -> 1), f 31;
#X msg 39 1127 60;
#X text 75 1094 play a MIDI note from a number (pitch) \, with velocity and duration, f 24;
#X obj 436 2187 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X floatatom 436 2258 5 0 0 0 - - - 12;
#X text 481 2184 get the estimated BPM;
#X text 481 2255 outputs after 2nd click;
#X obj 907 1151 dc.random note;
#X obj 907 1082 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X obj 907 1232 dc.note.scale minor eb;
#X obj 39 1162 dc.note.out 120 250;
#X obj 907 1312 dc.note.out 120 300;
#X obj 935 1271 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #000000 #000000 0 256;
#X obj 935 1185 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #000000 #000000 0 256;
#X text 938 1079 generate a random note between MIDI 36-72, f 21;
#X text 1055 1228 map the note to a minor eb scale, f 17;
#X obj 39 377 dc.audio.onoff~;
#X obj 436 2222 dc.tempo;
#X text 229 659 BANG!;
#X obj 645 1162 dc.step 60 63 67 72;
#X obj 645 1082 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X obj 645 1201 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #000000 #000000 0 256;
#X msg 787 1114 72 77 79;
#X text 677 1078 step through a list of numbers, f 15;
#X text 787 1135 replace with new numbers, f 13;
#X text 279 596 <- (4) detect triggers!;
#X text 269 374 (3) now start by using a microphone input to detect triggers in the sound, f 24;
#X text 39 411 (1) first turn the audio on, f 14;
#X text 39 455 (2) adjust sound settings for your soundcard in preferences, f 18;
#X text 39 797 (5) Now you can start to use this trigger to control other instruments/sounds/parameters/lights and more. All based on different time/timbre descriptors:, f 67;
#X obj 39 1318 dc.sample~;
#X obj 39 1274 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X msg 78 1274 read;
#X obj 40 1357 gain~ 1 0 20 0 0.833884;
#A saved;
#X obj 35 1480 dac~;
#X obj 646 1357 gain~ 1 0 20 0 0.771379;
#A saved;
#X obj 641 1480 dac~;
#X text 732 1314 play a synth sound;
#X text 732 1270 set the MIDI note;
#X text 126 1314 play a soundfile from the computer;
#X msg 600 1274 63;
#X msg 787 1082 36 36 48;
#X msg 688 1274 65;
#X text 126 1353 point to a folder of samples with:;
#X obj 126 1454 dc.sample~ bell.aiff;
#X text 126 1411 then easily load the sample with just the filename:, f 25;
#X obj 126 1378 declare -path ~/path/to/sounds;
#X text 126 1270 <- load the file;
#X obj 39 289 declare -path drumcode/pd;
#X obj 645 1318 dc.synth~;
#X obj 217 2081 dc.direction;
#X text 217 2034 slowing down or speeding up?, f 14;
#X obj 220 2111 hsl 128 17 0.01 1 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 91 1706 dc.fx.delay~;
#X obj 40 1802 gain~ 1 0 20 0 0.83349;
#A saved;
#X obj 35 1931 dac~;
#X obj 367 1802 gain~ 1 0 20 0 0.748412;
#A saved;
#X obj 362 1931 dac~;
#X msg 366 1567 60;
#X obj 366 1650 dc.fx.distort~;
#X obj 366 1602 dc.synth~ 120 100;
#X msg 40 1567 70;
#X obj 40 1621 dc.synth~;
#X obj 113 1567 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 2679 1;
#X obj 153 1621 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 6740 1;
#X obj 184 1674 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 2917 1;
#X text 109 1542 delaytime;
#X text 150 1601 feedback;
#X text 181 1648 damping;
#X obj 502 1602 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 2074 1;
#X text 499 1576 disortion;
#X text 39 249 Getting started: to use this library in your patches \, add the drumcode folder to the ~/Documents/plugdata/externals and make this object:;
#X obj 366 1762 dc.fx.filter~;
#X obj 502 1719 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 11317 1;
#X text 499 1694 filter cutoff;
#X text 462 1647 a distortion effect;
#X text 462 1759 a filter effect with resonance, f 19;
#X text 118 1730 a delay effect with delaytime \, feedback and damping, f 22;
#X obj 39 860 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X obj 39 938 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X floatatom 89 938 5 0 0 0 - - - 12;
#X floatatom 169 938 5 0 0 0 - - - 12;
#X floatatom 257 938 5 0 0 0 - - - 12;
#X floatatom 342 938 5 0 0 0 - - - 12;
#X floatatom 418 938 5 0 0 0 - - - 12;
#X text 89 955 time in ms;
#X text 560 856 the trigger.controls gives various different outputs (a combination of the individual objects below) for trigger \, time interval \, speed \, speed ramp \, direction of speed and hits counter. This is the best entrypoint for beginners because it has many things ready to go., f 31;
#X text 169 955 speed value;
#X text 257 955 speed ramp;
#X text 342 955 direction;
#X text 418 955 count hits received;
#X text 39 961 trigger;
#X text 560 986 See below for more detailed individual objec \, ts like dc.timer \, dc.speed \, dc.tempo \, dc.direction \, etc, f 34;
#X obj 39 1082 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X obj 39 897 dc.trigger.timecontrols, f 57;
#X obj 39 319 declare -path FluidCorpusManipulation;
#X obj 570 351 pdcontrol;
#X msg 570 318 browse https://github.com/flucoma/flucoma-pd/releases/latest;
#X text 281 315 You need to install Fluid Corpus Manipulation:, f 40;
#X text 571 290 click the link \, after download \, unzip and place in /Documents/plugdata/externals, f 68;
#X obj 747 1719 dc.fx.reverb~;
#X obj 702 1931 dac~;
#X obj 707 1802 gain2~ 1 0 20 0 0.799452;
#A saved;
#X text 853 1730 a stereo plate reverb effect with roomsize and brightness/damping, f 26;
#X text 756 1883 use gain2~ for stereo gain slider;
#X msg 702 1567 70;
#X obj 702 1601 dc.synth~;
#X obj 843 1621 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 3408 1;
#X obj 871 1674 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 7110 1;
#X text 840 1596 roomsize;
#X text 868 1653 brightness;
#X obj 366 1166 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X msg 405 1272 read;
#X obj 367 1355 gain~ 1 0 20 0 0.909955;
#A saved;
#X obj 362 1478 dac~;
#X obj 366 1316 dc.sampler~;
#X text 454 1269 <- load a folder of sounds, f 15;
#X text 454 1313 play a soundfile from the computer, f 17;
#X obj 366 1201 dc.random 0 100;
#X floatatom 366 1232 5 0 0 0 - - - 12;
#X text 405 1229 Use a number to trigger the selected sound, f 21;
#X obj 457 1391 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 6400 1;
#X text 454 1366 the playback rate;
#X obj 1208 1082 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X msg 1242 1130 60 60 67 67 69 69 67 65 65 64 64 62 62 60;
#X msg 1302 1202 67 69 67 65 64 60 67 69 67 65 64 60 60 55 60 60 55 60;
#X msg 1278 1163 60 62 64 60 60 62 64 60 64 65 67 64 65 67;
#X obj 1208 1232 dc.learn;
#X obj 1208 1313 dc.note.out 120 300;
#X text 1242 1079 learn a pattern from a list of notes (a melody) and generate every next note based on the learned pattern, f 48;
#X text 1556 1160 click to replace with this melody;
#X text 1321 1220 click to add this melody to the previous learned phrase;
#X floatatom 1233 1268 5 0 0 0 - - - 12;
#X text 1522 1128 first \, click to learn this melody;
#X text 1321 1266 (if message: [markov] no chain created \, prints in the console \, first train), f 61;
#X msg 702 2043 60;
#X text 702 1998 let the value through with a certain percentage of chance, f 26;
#X obj 702 2185 dc.note.out;
#X obj 702 2121 dc.chance 70;
#X obj 771 2081 hsl 128 18 0 100 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 6392 1;
#X text 768 2057 percentage 0-100%;
#X obj 768 2147 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X msg 960 2043 60;
#X text 960 1998 let the value through with a certain percentage of chance, f 26;
#X obj 960 2185 dc.note.out;
#X obj 960 2121 dc.every 4;
#X obj 1009 2081 nbx 4 18 -1e+37 1e+37 0 1 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 4 256;
#X text 1009 2057 every amount;
#X text 798 2146 input if not passed;
#X obj 1009 2147 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X text 1037 2146 input every other time;
#X obj 1056 1931 dac~;
#X text 1096 1883 use gain2~ for stereo gain slider;
#X obj 1139 1674 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 10378 1;
#X obj 1060 1601 dc.noise~;
#X obj 1060 1719 dc.fx.degrade~;
#X obj 1061 1800 gain~ 1 0 20 0 0.880638;
#A saved;
#X text 1166 1730 a degrading effect creating an 8bit sound, f 20;
#X text 1136 1653 degrading amount;
#X obj 1060 1567 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X text 1139 1600 play filtered noise;
#X obj 304 660 dc.trigger.display;
#X text 449 659 <- [dc.trigger.display];
#X text 449 687 the display shows the amplitude measured by the dc.trigger~. It also shows the upper and lower threshold lines \, set by the sensitivity and sensitivity range, f 38;
#X connect 1 0 13 0;
#X connect 4 0 1 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 10 0 12 0;
#X connect 12 0 11 0;
#X connect 13 0 22 0;
#X connect 13 0 27 0;
#X connect 13 0 97 0;
#X connect 15 0 17 0;
#X connect 16 0 35 0;
#X connect 17 0 14 0;
#X connect 17 1 16 0;
#X connect 22 0 21 0;
#X connect 25 0 31 0;
#X connect 25 0 30 0;
#X connect 27 0 25 0;
#X connect 30 0 28 0;
#X connect 31 0 36 0;
#X connect 37 0 43 0;
#X connect 37 2 208 0;
#X connect 38 0 40 0;
#X connect 40 0 39 0;
#X connect 41 0 42 0;
#X connect 42 0 37 0;
#X connect 44 0 37 1;
#X connect 48 0 57 0;
#X connect 50 0 64 0;
#X connect 54 0 60 0;
#X connect 54 0 56 0;
#X connect 55 0 54 0;
#X connect 56 0 59 0;
#X connect 56 0 58 0;
#X connect 64 0 51 0;
#X connect 66 0 68 0;
#X connect 67 0 66 0;
#X connect 68 0 96 0;
#X connect 69 0 66 1;
#X connect 77 0 80 0;
#X connect 78 0 77 0;
#X connect 79 0 77 0;
#X connect 80 0 81 0;
#X connect 80 0 81 1;
#X connect 82 0 83 0;
#X connect 82 0 83 1;
#X connect 87 0 96 0;
#X connect 88 0 66 1;
#X connect 89 0 96 0;
#X connect 96 0 82 0;
#X connect 97 0 99 0;
#X connect 100 0 101 0;
#X connect 101 0 102 0;
#X connect 101 0 102 1;
#X connect 103 0 104 0;
#X connect 103 0 104 1;
#X connect 105 0 107 0;
#X connect 106 0 119 0;
#X connect 107 0 106 0;
#X connect 108 0 109 0;
#X connect 109 0 101 0;
#X connect 109 0 100 0;
#X connect 110 0 100 1;
#X connect 111 0 100 2;
#X connect 112 0 100 3;
#X connect 116 0 106 1;
#X connect 119 0 103 0;
#X connect 120 0 119 1;
#X connect 125 0 141 0;
#X connect 140 0 48 0;
#X connect 141 0 126 0;
#X connect 141 1 127 0;
#X connect 141 2 128 0;
#X connect 141 3 129 0;
#X connect 141 4 130 0;
#X connect 141 5 131 0;
#X connect 144 0 143 0;
#X connect 147 0 149 0;
#X connect 147 1 149 1;
#X connect 149 0 148 0;
#X connect 149 1 148 1;
#X connect 152 0 153 0;
#X connect 153 0 147 0;
#X connect 153 0 149 0;
#X connect 153 0 149 1;
#X connect 154 0 147 1;
#X connect 155 0 147 2;
#X connect 158 0 165 0;
#X connect 159 0 162 0;
#X connect 160 0 161 0;
#X connect 160 0 161 1;
#X connect 162 0 160 0;
#X connect 165 0 166 0;
#X connect 166 0 162 0;
#X connect 168 0 162 2;
#X connect 170 0 174 0;
#X connect 171 0 174 1;
#X connect 172 0 174 2;
#X connect 173 0 174 1;
#X connect 174 0 175 0;
#X connect 174 0 179 0;
#X connect 182 0 185 0;
#X connect 185 0 184 0;
#X connect 185 1 188 0;
#X connect 186 0 185 1;
#X connect 189 0 192 0;
#X connect 192 0 191 0;
#X connect 192 1 196 0;
#X connect 193 0 192 1;
#X connect 200 0 202 1;
#X connect 201 0 202 0;
#X connect 202 0 203 0;
#X connect 203 0 198 0;
#X connect 203 0 198 1;
#X connect 206 0 201 0;
