#N canvas 827 239 527 327 12;
#X declare -path ~/path/to/sounds;
#X declare -path drumcode/pd;
#X declare -path FluidCorpusManipulation;
#X obj 39 96 cnv 15 421 67 empty empty written\ by\ Timo\ Hoogland\,\ 2024\,\ www.timohoogland.com 7 12 0 12 #efefef #000000 0;
#X obj 39 1980 dc.timer;
#X obj 39 39 cnv 15 421 41 empty empty ./drum.code 20 20 0 24 #00cb9e #ffffff 0;
#X text 39 173 A library of tools for hybrid drums (or other instruments) \, with onset detection \, timbre analysis \, basic algorithmic composition techniques \, midi and osc trigger outputs \, and more;
#X obj 39 1944 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 698 2256 dc.inrange 50 100, f 16;
#X obj 701 2221 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 701 2297 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X text 39 133 - Funded by Creative Industries Fund NL;
#X text 39 113 - License: GNU GPL-3.0;
#X obj 436 1944 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X floatatom 436 2020 5 0 0 0 - - - 12;
#X obj 436 1980 dc.count 250;
#X floatatom 39 2020 5 0 0 0 - - - 12;
#X obj 909 2295 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 909 2221 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 909 2321 hsl 128 17 0 127 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 906 2257 dc.gate 50;
#X text 436 1897 count triggers within a timeframe, f 16;
#X text 910 2174 output left if value passes threshold \, else output right, f 25;
#X text 698 2173 only output if value is within the specified range, f 23;
#X floatatom 39 2159 5 0 0 0 - - - 12;
#X obj 39 2121 dc.average 10;
#X text 57 2077 get the average over 10 values, f 14;
#X text 234 2077 get the speed value from 0-1, f 14;
#X obj 220 2157 hsl 128 17 0.01 1 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X text 39 1896 time from triggers, f 10;
#X obj 217 2121 dc.speed;
#X obj 220 2357 hsl 128 17 0 1 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #000000 #000000 0 1;
#X text 234 2275 slide back from the incoming value slowly to 0, f 23;
#X obj 217 2323 dc.slide;
#X msg 436 2242 /trigger/speed \$1;
#X text 455 2268 send Open Sound Control (OSC) messages over the network or locally, f 24;
#X text 436 2204 format an OSC message like so:;
#X text 925 2346 use this object to send osc "wireless" to the dc.osc.send object, f 24;
#X obj 906 2398 dc.osc.message /slider/low;
#X obj 436 2323 dc.osc.send localhost 4880;
#X obj 200 599 dc.trigger~;
#X obj 39 2286 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #000000 #000000;
#X obj 39 2357 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #000000 #000000;
#X obj 39 2323 dc.wait 2000;
#X obj 200 377 adc~ 1;
#X obj 200 406 meter~;
#X obj 200 633 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 272 547 hsl 128 17 0 1 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 2948 1;
#X text 269 462 <- [meter~] - useful to see the level of the incoming sound;
#X text 39 2239 reduce speed limit of incoming values, f 17;
#X text 269 521 adjust trigger the sensitivity (0 -> 1), f 31;
#X msg 39 1026 60;
#X text 75 993 play a MIDI note from a number (pitch) \, with velocity and duration, f 24;
#X obj 436 2086 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X floatatom 436 2157 5 0 0 0 - - - 12;
#X text 481 2083 get the estimated BPM;
#X text 481 2154 outputs after 2nd click;
#X obj 907 1050 dc.random note;
#X obj 907 981 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X obj 907 1131 dc.note.scale minor eb;
#X obj 39 1061 dc.note.out 120 250;
#X obj 907 1211 dc.note.out 120 300;
#X obj 935 1170 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #000000 #000000 0 256;
#X obj 935 1084 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #000000 #000000 0 256;
#X text 938 978 generate a random note between MIDI 36-72, f 21;
#X text 1055 1127 map the note to a minor eb scale, f 17;
#X obj 39 377 dc.audio.onoff~;
#X obj 436 2121 dc.tempo;
#X text 229 632 BANG!;
#X obj 645 1061 dc.step 60 63 67 72;
#X obj 645 981 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X obj 645 1100 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #000000 #000000 0 256;
#X msg 787 1013 72 77 79;
#X text 677 977 step through a list of numbers, f 15;
#X text 787 1034 replace with new numbers, f 13;
#X text 279 596 <- (4) detect triggers!;
#X text 269 374 (3) now start by using a microphone input to detect triggers in the sound, f 24;
#X text 39 411 (1) first turn the audio on, f 14;
#X text 39 455 (2) adjust sound settings for your soundcard in preferences, f 18;
#X text 39 696 (5) Now you can start to use this trigger to control other instruments/sounds/parameters/lights and more. All based on different time/timbre descriptors:, f 67;
#X obj 39 1217 dc.sample~;
#X obj 39 1173 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X msg 78 1173 read;
#X obj 40 1256 gain~ 1 0 20 0 0.833884;
#A saved;
#X obj 35 1379 dac~;
#X obj 646 1256 gain~ 1 0 20 0 0.771379;
#A saved;
#X obj 641 1379 dac~;
#X text 732 1213 play a synth sound;
#X text 732 1169 set the MIDI note;
#X text 126 1213 play a soundfile from the computer;
#X msg 600 1173 63;
#X msg 787 981 36 36 48;
#X msg 688 1173 65;
#X text 126 1252 point to a folder of samples with:;
#X obj 126 1353 dc.sample~ bell.aiff;
#X text 126 1310 then easily load the sample with just the filename:, f 25;
#X obj 126 1277 declare -path ~/path/to/sounds;
#X text 126 1169 <- load the file;
#X obj 39 289 declare -path drumcode/pd;
#X obj 645 1217 dc.synth~;
#X obj 217 1980 dc.direction;
#X text 217 1933 slowing down or speeding up?, f 14;
#X obj 220 2010 hsl 128 17 0.01 1 0 0 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 91 1605 dc.fx.delay~;
#X obj 40 1701 gain~ 1 0 20 0 0.83349;
#A saved;
#X obj 35 1830 dac~;
#X obj 367 1701 gain~ 1 0 20 0 0.748412;
#A saved;
#X obj 362 1830 dac~;
#X msg 366 1466 60;
#X obj 366 1549 dc.fx.distort~;
#X obj 366 1501 dc.synth~ 120 100;
#X msg 40 1466 70;
#X obj 40 1520 dc.synth~;
#X obj 113 1466 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 2679 1;
#X obj 153 1520 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 6740 1;
#X obj 184 1573 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 2917 1;
#X text 109 1441 delaytime;
#X text 150 1500 feedback;
#X text 181 1547 damping;
#X obj 502 1501 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 2074 1;
#X text 499 1475 disortion;
#X text 39 249 Getting started: to use this library in your patches \, add the drumcode folder to the ~/Documents/plugdata/externals and make this object:;
#X obj 366 1661 dc.fx.filter~;
#X obj 502 1618 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 11317 1;
#X text 499 1593 filter cutoff;
#X text 462 1546 a distortion effect;
#X text 462 1658 a filter effect with resonance, f 19;
#X text 118 1629 a delay effect with delaytime \, feedback and damping, f 22;
#X obj 39 759 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X obj 39 837 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X floatatom 89 837 5 0 0 0 - - - 12;
#X floatatom 169 837 5 0 0 0 - - - 12;
#X floatatom 257 837 5 0 0 0 - - - 12;
#X floatatom 342 837 5 0 0 0 - - - 12;
#X floatatom 418 837 5 0 0 0 - - - 12;
#X text 89 854 time in ms;
#X text 560 755 the trigger.controls gives various different outputs (a combination of the individual objects below) for trigger \, time interval \, speed \, speed ramp \, direction of speed and hits counter. This is the best entrypoint for beginners because it has many things ready to go., f 31;
#X text 169 854 speed value;
#X text 257 854 speed ramp;
#X text 342 854 direction;
#X text 418 854 count hits received;
#X text 39 860 trigger;
#X text 560 885 See below for more detailed individual objec \, ts like dc.timer \, dc.speed \, dc.tempo \, dc.direction \, etc, f 34;
#X obj 39 981 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X obj 39 796 dc.trigger.timecontrols, f 57;
#X obj 39 319 declare -path FluidCorpusManipulation;
#X obj 570 351 pdcontrol;
#X msg 570 318 browse https://github.com/flucoma/flucoma-pd/releases/latest;
#X text 281 315 You need to install Fluid Corpus Manipulation:, f 40;
#X text 571 290 click the link \, after download \, unzip and place in /Documents/plugdata/externals, f 68;
#X obj 747 1618 dc.fx.reverb~;
#X obj 702 1830 dac~;
#X obj 707 1701 gain2~ 1 0 20 0 0.799452;
#A saved;
#X text 853 1629 a stereo plate reverb effect with roomsize and brightness/damping, f 26;
#X text 756 1782 use gain2~ for stereo gain slider;
#X msg 702 1466 70;
#X obj 702 1500 dc.synth~;
#X obj 843 1520 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 3408 1;
#X obj 871 1573 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 7110 1;
#X text 840 1495 roomsize;
#X text 868 1552 brightness;
#X obj 366 1065 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #000000;
#X msg 405 1171 read;
#X obj 367 1254 gain~ 1 0 20 0 0.909955;
#A saved;
#X obj 362 1377 dac~;
#X obj 366 1215 dc.sampler~;
#X text 454 1168 <- load a folder of sounds, f 15;
#X text 454 1212 play a soundfile from the computer, f 17;
#X obj 366 1100 dc.random 0 100;
#X floatatom 366 1131 5 0 0 0 - - - 12;
#X text 405 1128 Use a number to trigger the selected sound, f 21;
#X obj 457 1290 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 6400 1;
#X text 454 1265 the playback rate;
#X obj 1208 981 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X msg 1242 1029 60 60 67 67 69 69 67 65 65 64 64 62 62 60;
#X msg 1302 1101 67 69 67 65 64 60 67 69 67 65 64 60 60 55 60 60 55 60;
#X msg 1278 1062 60 62 64 60 60 62 64 60 64 65 67 64 65 67;
#X obj 1208 1131 dc.learn;
#X obj 1208 1212 dc.note.out 120 300;
#X text 1242 978 learn a pattern from a list of notes (a melody) and generate every next note based on the learned pattern, f 48;
#X text 1556 1059 click to replace with this melody;
#X text 1321 1119 click to add this melody to the previous learned phrase;
#X floatatom 1233 1167 5 0 0 0 - - - 12;
#X text 1522 1027 first \, click to learn this melody;
#X text 1321 1165 (if message: [markov] no chain created \, prints in the console \, first train), f 61;
#X msg 702 1942 60;
#X text 702 1897 let the value through with a certain percentage of chance, f 26;
#X obj 702 2084 dc.note.out;
#X obj 702 2020 dc.chance 70;
#X obj 771 1980 hsl 128 18 0 100 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 6392 1;
#X text 768 1956 percentage 0-100%;
#X obj 768 2046 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X msg 960 1942 60;
#X text 960 1897 let the value through with a certain percentage of chance, f 26;
#X obj 960 2084 dc.note.out;
#X obj 960 2020 dc.every 4;
#X obj 1009 1980 nbx 4 18 -1e+37 1e+37 0 1 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 4 256;
#X text 1009 1956 every amount;
#X text 798 2045 input if not passed;
#X obj 1009 2046 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X text 1037 2045 input every other time;
#X obj 1056 1830 dac~;
#X text 1096 1782 use gain2~ for stereo gain slider;
#X obj 1139 1573 hsl 128 17 0 127 0 1 empty empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #000000 10378 1;
#X obj 1060 1500 dc.noise~;
#X obj 1060 1618 dc.fx.degrade~;
#X obj 1061 1699 gain~ 1 0 20 0 0.880638;
#A saved;
#X text 1166 1629 a degrading effect creating an 8bit sound, f 20;
#X text 1136 1552 degrading amount;
#X obj 1060 1466 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X text 1139 1499 play filtered noise;
#X connect 1 0 13 0;
#X connect 4 0 1 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 10 0 12 0;
#X connect 12 0 11 0;
#X connect 13 0 22 0;
#X connect 13 0 27 0;
#X connect 13 0 97 0;
#X connect 15 0 17 0;
#X connect 16 0 35 0;
#X connect 17 0 14 0;
#X connect 17 1 16 0;
#X connect 22 0 21 0;
#X connect 25 0 31 0;
#X connect 25 0 30 0;
#X connect 27 0 25 0;
#X connect 30 0 28 0;
#X connect 31 0 36 0;
#X connect 37 0 43 0;
#X connect 38 0 40 0;
#X connect 40 0 39 0;
#X connect 41 0 42 0;
#X connect 42 0 37 0;
#X connect 44 0 37 1;
#X connect 48 0 57 0;
#X connect 50 0 64 0;
#X connect 54 0 60 0;
#X connect 54 0 56 0;
#X connect 55 0 54 0;
#X connect 56 0 59 0;
#X connect 56 0 58 0;
#X connect 64 0 51 0;
#X connect 66 0 68 0;
#X connect 67 0 66 0;
#X connect 68 0 96 0;
#X connect 69 0 66 1;
#X connect 77 0 80 0;
#X connect 78 0 77 0;
#X connect 79 0 77 0;
#X connect 80 0 81 0;
#X connect 80 0 81 1;
#X connect 82 0 83 0;
#X connect 82 0 83 1;
#X connect 87 0 96 0;
#X connect 88 0 66 1;
#X connect 89 0 96 0;
#X connect 96 0 82 0;
#X connect 97 0 99 0;
#X connect 100 0 101 0;
#X connect 101 0 102 0;
#X connect 101 0 102 1;
#X connect 103 0 104 0;
#X connect 103 0 104 1;
#X connect 105 0 107 0;
#X connect 106 0 119 0;
#X connect 107 0 106 0;
#X connect 108 0 109 0;
#X connect 109 0 101 0;
#X connect 109 0 100 0;
#X connect 110 0 100 1;
#X connect 111 0 100 2;
#X connect 112 0 100 3;
#X connect 116 0 106 1;
#X connect 119 0 103 0;
#X connect 120 0 119 1;
#X connect 125 0 141 0;
#X connect 140 0 48 0;
#X connect 141 0 126 0;
#X connect 141 1 127 0;
#X connect 141 2 128 0;
#X connect 141 3 129 0;
#X connect 141 4 130 0;
#X connect 141 5 131 0;
#X connect 144 0 143 0;
#X connect 147 0 149 0;
#X connect 147 1 149 1;
#X connect 149 0 148 0;
#X connect 149 1 148 1;
#X connect 152 0 153 0;
#X connect 153 0 147 0;
#X connect 153 0 149 0;
#X connect 153 0 149 1;
#X connect 154 0 147 1;
#X connect 155 0 147 2;
#X connect 158 0 165 0;
#X connect 159 0 162 0;
#X connect 160 0 161 0;
#X connect 160 0 161 1;
#X connect 162 0 160 0;
#X connect 165 0 166 0;
#X connect 166 0 162 0;
#X connect 168 0 162 2;
#X connect 170 0 174 0;
#X connect 171 0 174 1;
#X connect 172 0 174 2;
#X connect 173 0 174 1;
#X connect 174 0 175 0;
#X connect 174 0 179 0;
#X connect 182 0 185 0;
#X connect 185 0 184 0;
#X connect 185 1 188 0;
#X connect 186 0 185 1;
#X connect 189 0 192 0;
#X connect 192 0 191 0;
#X connect 192 1 196 0;
#X connect 193 0 192 1;
#X connect 200 0 202 1;
#X connect 201 0 202 0;
#X connect 202 0 203 0;
#X connect 203 0 198 0;
#X connect 203 0 198 1;
#X connect 206 0 201 0;
